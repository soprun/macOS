#!/bin/bash

USAGE_DESCRIPTION="Listing arguments with \$* and \$@"

# shellcheck disable=SC1091
# shellcheck source=../shell-common
source "${SHELL_HOME}/shell-common"

# arglist.sh
# Invoke this script with several arguments, such as "one two three" ...
# see: https://tldp.org/LDP/abs/html/internalvariables.html#TMDIN

E_BADARGS=85

if [ ! -n "$1" ]; then
  echo "Usage: $(basename $0) argument1 argument2 etc."
  exit $E_BADARGS
fi

echo

index=1 # Initialize count.

echo "Listing args with \"\$*\":"
for arg in "$*"; do # Doesn't work properly if "$*" isn't quoted.
  echo "Arg #$index = $arg"
  let "index+=1"
done # $* sees all arguments as single word.
echo "Entire arg list seen as single word."

echo

index=1 # Reset count.
# What happens if you forget to do this?

echo "Listing args with \"\$@\":"
for arg in "$@"; do
  echo "Arg #$index = $arg"
  let "index+=1"
done # $@ sees arguments as separate words.
echo "Arg list seen as separate words."

echo

index=1 # Reset count.

echo "Listing args with \$* (unquoted):"
for arg in $*; do
  echo "Arg #$index = $arg"
  let "index+=1"
done # Unquoted $* sees arguments as separate words.
echo "Arg list seen as separate words."

exit 0
