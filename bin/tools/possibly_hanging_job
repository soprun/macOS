#!/bin/bash

# see: https://tldp.org/LDP/abs/html/internalvariables.html#TMDIN

USAGE_DESCRIPTION="PID (process ID) of last job run in background"

# shellcheck disable=SC1091
# shellcheck source=../shell-common
source "${SHELL_HOME}/shell-common"

LOG=$0.log

COMMAND1="sleep 500"

echo "Logging PIDs background commands for script: $0" >>"$LOG"
# So they can be monitored, and killed as necessary.
echo >>"$LOG"

# Logging commands.

echo -n "PID of \"$COMMAND1\":  " >>"$LOG"
${COMMAND1} &
echo $! >>"$LOG"
# PID of "sleep 100":  1506

# Thank you, Jacques Lederer, for suggesting this.


# possibly_hanging_job & { sleep 1; eval 'kill -9 $!' &> /dev/null; }
# Forces completion of an ill-behaved program.
# Useful, for example, in init scripts.

# Thank you, Sylvain Fourmanoit, for this creative use of the "!" variable.


# possibly_hanging_job & { sleep 1; sleep 2; rand; eval 'kill -9 $!' &> /dev/null; } & { sleep 1; sleep 2; rand; eval 'kill -9 $!' &> /dev/null; }

# possibly_hanging_job & { sleep 1  &  sleep 2; echo 123; eval 'kill -9 $!' &> /dev/null  &  sleep 1; echo 566; eval 'kill -9 $!' &> /dev/null; }
