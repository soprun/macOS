#!/bin/bash

set -e

# https://www.vankuik.nl/2019-04-23_ISO_date_on_macOS

# fully ISO-8601 compliant date
# date_iso_8601=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

# date_iso_8601=$(date +%Y-%m-%dT%H:%M:%S)

# date_rfc_2822=""
# date_rfc_3339=""

# date_time=$(date +"%Y/%m/%d %H:%M:%S")
# utc_date_time=$(date -u +"%Y/%m/%dT%H:%M:%SZ")

# log_info $date_iso_8601
# log_info $date_rfc_2822
# log_info $date_rfc_3339
# log_info $date_time
# log_info $utc_date_time

# Чтобы напечатать текущую дату в формате ISO 8601 в macOS:
# 2019-04-23T14:44:46
function current_date()
{
  date +%Y-%m-%dT%H:%M:%S
}

# Чтобы распечатать его с информацией о часовом поясе, добавьте% z.
# 2019-04-23T14:44:42+0200
function current_date_timezone()
{
  date +%Y-%m-%dT%H:%M:%S%z
}

# Обратите внимание, что в последнем случае вам не хватает двоеточия в бите часового пояса.
# Чтобы исправить это, нам нужно проделать некоторую магию bash:
# 2019-04-23T14:44:42+02:00

function current_date_zone()
{
  local zone datetime
  zone=$(date +%z)
  datetime=$(date +%Y-%m-%dT%H:%M:%S)

  echo "${datetime}${zone:0:3}:${zone:3:2}"
}

#current_date
#current_date_timezone
#current_date_zone
