#!/bin/bash

# shellcheck source=../shell-common
source "${SHELL_BIN}/shell-common"

if [ "$(git config --global --get user.name)" != "$GIT_NAME" ]; then
  error_exit "An error occurred, the user.name parameter does not match the identity."
fi

if [ "$(git config --global --get user.email)" != "$GIT_EMAIL" ]; then
  error_exit "An error occurred, the user.email parameter does not match the identity."
fi

if [ "$(git config --global --get commit.gpgsign)" != "$GIT_GPG_SIGN" ]; then
  error_exit "An error occurred, the gpgsign parameter does not match the identity."
fi

# Record changes to the repository
commit_message_default="Signing commit $(date +%Y-%m-%dT%H:%M:%S%z)"
commit_message=${1:-$commit_message_default}

log_info "$(printf "name: $COLOR_BLUE%s$COLOR_RESET" "$GIT_NAME")"
log_info "$(printf "email: $COLOR_BLUE%s$COLOR_RESET" "$GIT_EMAIL")"
log_info "$(printf "GPG key: $COLOR_YELLOW%s$COLOR_RESET" "$GIT_GPG_KEY")"
log_info "$(printf "commit: $COLOR_CYAN%s$COLOR_RESET 📝" "$commit_message")"

if [ -z "$commit_message" ]; then
  log_error "Commit message empty!"
fi

if ! git commit -S --all --message "$commit_message" >/dev/null 2>/dev/null; then
  log_error "An error occurred when record changes"
else
  log_success "Commit id: $(git rev-parse --short HEAD)"
fi

# Pushes your local commits to the remote repository

read -r -p "Push to the repository? [y/N]" git_push

if [[ "$git_push" =~ ^([yY][eE][sS]|[yY])$ ]]; then
  if ! git push origin --follow-tags >/dev/null 2>/dev/null; then
    log_warn "An error occurred when pushing tag: $tag_name"
  fi
fi
