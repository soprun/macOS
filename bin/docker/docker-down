#!/bin/bash

# shellcheck disable=SC2207

# shellcheck source=../shell-common
source "${SHELL_HOME}/shell-common"

function estimate() {
	local -a container_ids
	local -i container_count

	container_ids=($(docker container list --all --quiet))
	container_count="${#container_ids[@]}"

	local -a container_running_ids
	local -i container_running_count

	container_running_ids=($(docker container list --all --filter "status=running" --quiet))
	container_running_count="${#container_running_ids[@]}"

	local -a image_ids
	local -i image_count

	image_ids=($(docker images --all --quiet))
	image_count="${#image_ids[@]}"

	output "Containers all: ${container_count}" 'info'
	output "Containers running: ${container_running_count}" 'info'
	output "Images all: ${image_count}" 'info'
}

estimate

output 'Down docker! ğŸš›' 'heading'

if (("${container_running_count:-0}" > 0)); then
	if docker container stop "${container_running_ids:-}"; then
		output "Stop ${container_running_count} containers âœ…" 'success'
	fi
fi

if docker container prune --force &> /dev/null; then
	output "Remove all stopped containers ğŸš’" 'success'
fi

if docker network prune --force &> /dev/null; then
	output "Remove all unused networks ğŸ–¥" 'success'
fi

if docker volume prune --force &> /dev/null; then
	output "Remove all unused local volumes âœ…" 'success'
fi

# if docker image prune --all --force &>/dev/null; then
#   output "Remove all unused local images ğŸš’" 'success'
# fi

# if docker rmi --force "${image_ids:-}" &>/dev/null; then
#   output "Remove all images ğŸ–¼" 'success'
# fi

estimate
